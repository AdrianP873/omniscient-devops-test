name: hello-world-app
on:
  push:
    paths:
      - 'src/**'

  workflow_dispatch:
    home:
      required: false
      default: "Trigger"
      description: "Enable manual triggers"

env:
  REGION: ap-southeast-2
  APPLICATION_NAME: hello-world

jobs:
  validate-and-test-app:
    runs-on: ubuntu-latest
    env:
      ENV: dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Run linting and run unit tests
        run: |
          pip install -r requirements.txt
          pip install pylint pytest
          pylint src/app.py
          pytest

  build-app:
    needs: validate-and-test-app
    runs-on: ubuntu-latest
    env:
      ENV: dev
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hello-world
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
  deploy-app:
    needs: build-app
    runs-on: ubuntu-latest
    env:
      ENV: dev
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Update k8s deployment
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hello-world
          IMAGE_TAG: ${{ github.sha }}
        run: |
          kubectl set-image deployment/hello-world hello-world=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG